<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/><!-- lookup parent from repository -->
    </parent>
    <groupId>com.xrlj</groupId>
    <artifactId>xrlj-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>xrlj-parent</name>
    <description>
        spring-cloud微服务架构
    </description>

    <!-- 多环境配置 -->
    <!-- 打包：mvn clean package -Pdev -U 或者 mvn clean package -DprofileActive=dev -U -->
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!-- 默认启动环境 -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profileActive>dev</profileActive>
                <nexus.host>172.31.31.31</nexus.host>

                <!--jooq生成代码-->
                <driver>com.mysql.cj.jdbc.Driver</driver>
                <url>jdbc:mysql://172.31.31.31:3910</url>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <profileActive>test</profileActive>
                <nexus.host>192.168.0.3</nexus.host>

                <!--jooq生成代码-->
                <driver>com.mysql.cj.jdbc.Driver</driver>
                <url>jdbc:mysql://172.31.31.31:3910</url>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profileActive>prod</profileActive>
                <nexus.host>192.168.0.3</nexus.host>

                <!--jooq生成代码-->
                <driver>com.mysql.cj.jdbc.Driver</driver>
                <url>jdbc:mysql://172.31.31.31:3910</url>
            </properties>
        </profile>
        <!--其它临时环境-->
        <profile>
            <id>local</id>
            <properties>
                <profileActive>local</profileActive>
                <nexus.host>192.168.0.3</nexus.host>

                <!--jooq生成代码-->
                <driver>com.mysql.cj.jdbc.Driver</driver>
                <url>jdbc:mysql://192.168.0.3:3910</url>
            </properties>
        </profile>
    </profiles>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>
        <!--防止maven改动IDE的language level -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!--spring-cloud版本-->
        <spring-cloud.version>Greenwich.SR3</spring-cloud.version>

        <!--<nexus.host>192.168.0.3</nexus.host>-->
        <nexus.port>8081</nexus.port>
        <nexus.url>http://${nexus.host}:8081</nexus.url>

        <xrlj-dependencies.version>0.0.1-SNAPSHOT</xrlj-dependencies.version>
        <xrlj-java-utils.version>0.0.1-SNAPSHOT</xrlj-java-utils.version>
        <xrlj-infrastructure.version>0.0.1-SNAPSHOT</xrlj-infrastructure.version>
        <xrlj-codegen.version>0.0.1-SNAPSHOT</xrlj-codegen.version>
        <xrlj-framework.version>0.0.1-SNAPSHOT</xrlj-framework.version>
        <xrlj-configuration-ds.version>0.0.1-SNAPSHOT</xrlj-configuration-ds.version>
        <xrlj-configuration-web.version>0.0.1-SNAPSHOT</xrlj-configuration-web.version>
        <feign-form.version>3.8.0</feign-form.version>
        <logstash-logback-encoder.version>6.1</logstash-logback-encoder.version>

        <!--app service docker注册前缀-->
        <docker.image.url>${nexus.host}:8082</docker.image.url>
        <docker.image.prefix>xrlj</docker.image.prefix>

        <dockerfile-maven-plugin.vesion>1.4.9</dockerfile-maven-plugin.vesion>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.xrlj</groupId>
            <artifactId>xrlj-java-utils</artifactId>
            <version>${xrlj-java-utils.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.xrlj</groupId>
                <artifactId>xrlj-dependencies</artifactId>
                <version>${xrlj-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.xrlj</groupId>
                <artifactId>xrlj-framework</artifactId>
                <version>${xrlj-framework.version}</version>
            </dependency>

            <dependency>
                <groupId>com.xrlj</groupId>
                <artifactId>xrlj-infrastructure</artifactId>
                <version>${xrlj-infrastructure.version}</version>
            </dependency>

            <dependency>
                <groupId>com.xrlj</groupId>
                <artifactId>xrlj-codegen</artifactId>
                <version>${xrlj-codegen.version}</version>
            </dependency>

            <dependency>
                <groupId>com.xrlj</groupId>
                <artifactId>xrlj-configuration-ds</artifactId>
                <version>${xrlj-configuration-ds.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xrlj</groupId>
                <artifactId>xrlj-configuration-web</artifactId>
                <version>${xrlj-configuration-web.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>2.1.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-jdbc</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.github.openfeign.form</groupId>
                <artifactId>feign-form</artifactId>
                <version>${feign-form.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign.form</groupId>
                <artifactId>feign-form-spring</artifactId>
                <version>${feign-form.version}</version>
            </dependency>

            <!--必须要和logback版本对应，这个版本对应logback的1.2.3-->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash-logback-encoder.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!--打包成lib-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <maxmem>1024m</maxmem>
                        <meminitial>256m</meminitial>
                        <encoding>UTF-8</encoding>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>

                <!-- javadoc生成插件。使用：http://maven.apache.org/components/plugins/maven-javadoc-plugin -->
                <!-- 执行命令：mvn javadoc:javadoc 将生成doc -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <!-- 显示私有变量 -->
                        <show>private</show>
                        <links>
                            <link>http://commons.apache.org/dbcp/apidocs/</link>
                        </links>
                        <!-- 排除不生成doc的包 -->
                        <!-- <excludePackageNames>com.ymu.framework.utils:com.ymu.framework.web.controller</excludePackageNames> -->
                        <excludePackageNames>com.ymu.framework.web.controller</excludePackageNames>
                        <!-- 生成doc路径 -->
                        <reportOutputDirectory>../apiDocs</reportOutputDirectory>
                        <!-- doc目录名称 -->
                        <destDir>${project.name}</destDir>
                    </configuration>
                </plugin>

                <!--单元测试插件-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <!--不运行单元测试-->
                        <skipTests>true</skipTests>
                        <!-- set heap size to work around http://github.com/travis-ci/travis-ci/issues/3396 -->
                        <!--<argLine>-Xmx1024m</argLine>-->
                        <forkMode>once</forkMode>
                        <argLine>-Dfile.encoding=UTF-8</argLine>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.vesion}</version>
                    <configuration>
                        <repository>${docker.image.url}/${docker.image.prefix}/${project.artifactId}</repository>
                        <tag>${project.version}</tag>
                        <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.1.1</version>
                    <executions>
                        <execution>
                            <id>unpack</id>
                            <phase>package</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>${project.artifactId}</artifactId>
                                        <version>${project.version}</version>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.mysema.maven</groupId>
                    <artifactId>apt-maven-plugin</artifactId>
                    <version>1.1.3</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>

    <!--mavne 发布-->
    <distributionManagement>
        <repository>
            <id>repository</id>
            <name>maven-releases</name>
            <url>${nexus.url}/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <!--这里id要和maven的setting.xml中配置的一致-->
            <id>snapshots</id>
            <name>maven-snapshots</name>
            <url>${nexus.url}/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>


</project>
